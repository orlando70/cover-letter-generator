import { useState, React } from 'react';
import axios from 'axios';
import Head from 'next/Head';
import styles from "../styles/Home.module.css";


const App = () => {
  const [formData, setFormData] = useState({
    company: '',
    name: '',
    skills: '',
    position: '',
    experience: ''
  });
  const [result, setResult] = useState('');
  const [isLoading, setIsLoading] = useState(false);
  const [error, setError] = useState(null);

  const handleChange = (e) => {
    setFormData({
      ...formData,
      [e.target.name]: e.target.value
    });
  }

  const handleSubmit = async (e) => {
    e.preventDefault();
    setIsLoading(true);

    try {
      const result = await axios.post('/api/generate', formData);
      setResult(result.data);
    } catch (err) {
      setError(err);
    }

    setIsLoading(false);
  }

  const handleCopy = () => {
    navigator.clipboard.writeText(result);
  }

  return (
    <>
      <Head>
        <title>Generate Cover Letter</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
      </Head>
      <div className={styles.container}>
        <div className={styles.wrapper}>
          <header className={styles.header}>
            <p>Generate a <span>Cover Letter</span> in seconds.</p>
          </header>
          <form className={styles.form} onSubmit={handleSubmit}>
            <label>
              Company:
              <input type="text" name="company" value={formData.company} onChange={handleChange} />
            </label>
            <br />
            <label>
              Name:
              <input type="text" name="name" value={formData.name} onChange={handleChange} />
            </label>
            <br />
            <label>
              Position:
              <input type="text" name="position" value={formData.position} onChange={handleChange} />
            </label>
            <br />
            <label>
              Skills:
              <textarea name="skills" placeholder='Outline your skills' value={formData.skills} onChange={handleChange} />
            </label>
            <br />
            <label>
              Years of Experience:
              <input type="number" name="experience" value={formData.experience} onChange={handleChange} />
            </label>
            <br />
            <button className={styles.button} type="submit">Generate Cover Letter</button>
            {result && <button className={styles.button} onClick={handleCopy}>Copy to Clipboard</button>}
            {isLoading && <p>Generating cover letter...</p>}
            {error && <p>An error occurred: {error.message}</p>}
            <br />
            <br />
            {result && <p className={styles.result}> {result}</p>}
          </form>
        </div>
      </div>
    </>
  )
}


export default App;